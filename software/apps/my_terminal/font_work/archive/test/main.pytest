import freetype
import matplotlib.pyplot as plt
import numpy as np

# Font setup
FONT_FILE = "PxPlus_IBM_VGA_8x16.ttf"
CHAR_HEIGHT = 16
GRID_SIZE = 16  # 16x16 grid for 256 characters

# Initialize FreeType face
face = freetype.Face(FONT_FILE)
face.set_pixel_sizes(0, CHAR_HEIGHT)

# Prepare grid canvas
cell_width = 8
cell_height = 16
canvas_width = GRID_SIZE * cell_width
canvas_height = GRID_SIZE * cell_height
canvas = np.zeros((canvas_height, canvas_width), dtype=np.uint8)

# Render each CP437 character
for code in range(256):
    char = chr(code)
    face.load_char(char, freetype.FT_LOAD_RENDER)
    bitmap = face.glyph.bitmap
    top = face.glyph.bitmap_top
    left = face.glyph.bitmap_left

    # Calculate position in grid
    row = code // GRID_SIZE
    col = code % GRID_SIZE
    x = col * cell_width + left
    y = row * cell_height + (cell_height - top)

    # Extract bitmap
    glyph = np.array(bitmap.buffer, dtype=np.uint8).reshape(bitmap.rows, bitmap.width)
    h, w = glyph.shape

    # Clip if necessary to avoid overflow
    x_start = max(x, 0)
    y_start = max(y, 0)
    x_end = min(x + w, canvas_width)
    y_end = min(y + h, canvas_height)

    glyph_x_start = x_start - x
    glyph_y_start = y_start - y
    glyph_x_end = glyph_x_start + (x_end - x_start)
    glyph_y_end = glyph_y_start + (y_end - y_start)

    # Paste glyph into canvas
    canvas[y_start:y_end, x_start:x_end] = glyph[glyph_y_start:glyph_y_end, glyph_x_start:glyph_x_end]

# Display the grid
plt.figure(figsize=(8, 8))
plt.imshow(canvas, cmap='gray', interpolation='nearest')
plt.title("CP437 Character Grid (PxPlus IBM VGA 8x16)")
plt.axis('off')
plt.show()
